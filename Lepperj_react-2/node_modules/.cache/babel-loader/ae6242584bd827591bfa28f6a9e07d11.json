{"ast":null,"code":"var _jsxFileName = \"/Users/user/Exercise round 2 /Exercise_App/Lepperj_react-2/src/components/ThemeSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ThemeSwitcher = () => {\n  _s();\n\n  const [theme, setTheme] = useState(null);\n\n  const resetTheme = () => {\n    setTheme(null);\n  };\n\n  const themeClass = theme ? theme.toLowerCase() : \"secondary\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-capitalize h1 mb-4 w-100 text-center text-${themeClass}`,\n      children: `${theme || \"Default\"} Theme`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `text-capitalize btn btn-${themeClass} btn-lg\"`,\n        type: \"button\",\n        children: theme ? theme + \" theme\" : \"Choose Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `btn btn-lg btn-${themeClass} dropdown-toggle dropdown-toggle-split`,\n        \"data-bs-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Toggle Dropdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          onClick: () => setTheme(\"primary\"),\n          children: \"Primary Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          onClick: () => setTheme(\"danger\"),\n          children: \"Danger Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          onClick: () => setTheme(\"success\"),\n          children: \"Success Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"dropdown-item\",\n          href: \"#\",\n          onClick: () => resetTheme(),\n          children: \"Default Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ThemeSwitcher, \"I+qclacXXNdo5P2hnOjcay11Zn4=\");\n\n_c = ThemeSwitcher;\nexport default ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/user/Exercise round 2 /Exercise_App/Lepperj_react-2/src/components/ThemeSwitcher.js"],"names":["useState","ThemeSwitcher","theme","setTheme","resetTheme","themeClass","toLowerCase"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMI,UAAU,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA,QAAME,UAAU,GAAGH,KAAK,GAAGA,KAAK,CAACI,WAAN,EAAH,GAAyB,WAAjD;AACA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,kDAAiDD,UAAW,EAD1E;AAAA,gBAGI,GAAEH,KAAK,IAAI,SAAU;AAHzB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAG,2BAA0BG,UAAW,UAAzD;AAAoE,QAAA,IAAI,EAAC,QAAzE;AAAA,kBACGH,KAAK,GAAGA,KAAK,GAAG,QAAX,GAAsB;AAD9B;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,kBAAiBG,UAAW,wCAF1C;AAGE,0BAAe,UAHjB;AAIE,yBAAc,OAJhB;AAAA,+BAME;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAJF,eAYE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,SAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,QAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AACE,UAAA,SAAS,EAAC,eADZ;AAC4B,UAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,SAAD,CADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAWE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAG,UAAA,SAAS,EAAC,eAAb;AAA6B,UAAA,IAAI,EAAC,GAAlC;AAAsC,UAAA,OAAO,EAAE,MAAMC,UAAU,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAsCD,CA5CD;;GAAMH,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\";\nconst ThemeSwitcher = () => {\n  const [theme, setTheme] = useState(null);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n  const themeClass = theme ? theme.toLowerCase() : \"secondary\";\n  return (\n    <>\n      <div\n        className={`text-capitalize h1 mb-4 w-100 text-center text-${themeClass}`}\n      >\n        {`${theme || \"Default\"} Theme`}\n      </div>\n      <div className=\"btn-group\">\n        <button className={`text-capitalize btn btn-${themeClass} btn-lg\"`} type=\"button\">\n          {theme ? theme + \" theme\" : \"Choose Theme\"}\n        </button>\n        <button\n          type=\"button\"\n          className={`btn btn-lg btn-${themeClass} dropdown-toggle dropdown-toggle-split`}\n          data-bs-toggle=\"dropdown\"\n          aria-expanded=\"false\"\n        >\n          <span className=\"visually-hidden\">Toggle Dropdown</span>\n        </button>\n        <div className=\"dropdown-menu\">\n          <a className=\"dropdown-item\" onClick={() => setTheme(\"primary\")}>\n            Primary Theme\n          </a>\n          <a className=\"dropdown-item\" onClick={() => setTheme(\"danger\")}>\n            Danger Theme\n          </a>\n          <a\n            className=\"dropdown-item\" onClick={() => setTheme(\"success\")}>\n            Success Theme\n          </a>\n          <div className=\"dropdown-divider\"></div>\n          <a className=\"dropdown-item\" href=\"#\" onClick={() => resetTheme()}>\n            Default Theme\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ThemeSwitcher;"]},"metadata":{},"sourceType":"module"}