{"ast":null,"code":"var _jsxFileName = \"/Users/user/Exercise round 2 /Exercise_App/Lepperj_react-2/src/pages/AddExercisePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport CoolCalendar from '../components/calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddExercisePage = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [reps, setReps] = useState('');\n  const [weight, setWeight] = useState('');\n  const [unit, setUnit] = useState('lbs');\n  const [date, setDate] = useState('');\n  const history = useHistory();\n\n  const changeDate = date => {\n    setDate(current => current);\n  };\n\n  const addExercise = async () => {\n    const exercise = {\n      name,\n      reps,\n      weight,\n      unit,\n      date\n    };\n    const response = await fetch(`/exercises`, {\n      method: 'POST',\n      body: JSON.stringify(exercise),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n\n    if (response.status === 201) {\n      alert(\"Noice! Get swoll\");\n    } else {\n      alert('You failed to add the lift, broh. Try again broh');\n    }\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter excercise here\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: reps,\n      placeholder: \"Enter Reps here\",\n      onChange: e => setReps(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Weight here\",\n      value: weight,\n      onChange: e => setWeight(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: unit,\n      onChange: e => setUnit(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"lbs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"kgs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CoolCalendar, {\n      changeDate: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter date here\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addExercise,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddExercisePage, \"ZpgiFIwxhIRUWFiZKscYmQa2F+E=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddExercisePage;\nexport default AddExercisePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExercisePage\");","map":{"version":3,"sources":["/Users/user/Exercise round 2 /Exercise_App/Lepperj_react-2/src/pages/AddExercisePage.js"],"names":["React","useState","useHistory","CoolCalendar","AddExercisePage","name","setName","reps","setReps","weight","setWeight","unit","setUnit","date","setDate","history","changeDate","current","addExercise","exercise","response","fetch","method","body","JSON","stringify","headers","status","alert","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CoolCalendar from '../components/calendar';\r\n\r\nexport const AddExercisePage = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [reps, setReps] = useState('');\r\n    const [weight, setWeight] = useState('');\r\n    const [unit, setUnit] = useState('lbs');\r\n    const [date, setDate] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const changeDate = date => {\r\n        setDate(current => current);\r\n    };\r\n    const addExercise = async () => {\r\n        const exercise = {name,reps,weight,unit,date};\r\n        const response = await fetch(`/exercises`, {\r\n            method: 'POST',\r\n             body: JSON.stringify(exercise),\r\n              headers: {\r\n                  'Content-type': 'application/json'\r\n                },\r\n            });\r\n            if(response.status === 201) {\r\n                alert(\"Noice! Get swoll\")\r\n            } else {\r\n                alert('You failed to add the lift, broh. Try again broh')\r\n            }\r\n            history.push(\"/\")\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Add Exercise</h1>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter excercise here\"\r\n                value={name}\r\n                onChange={e => setName(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                value={reps}\r\n                placeholder=\"Enter Reps here\"\r\n                onChange={e => setReps(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Weight here\"\r\n                value={weight}\r\n                onChange={e => setWeight(e.target.value)} />\r\n            <select\r\n                value={unit}\r\n                onChange={e => setUnit(e.target.value)}>\r\n                <option>lbs</option>\r\n                <option>kgs</option>\r\n            </select>\r\n            <CoolCalendar changeDate={date}/> \r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter date here\"\r\n                value={date}\r\n                onChange={e => setDate(e.target.value)} />\r\n            <button\r\n                onClick={addExercise}\r\n            >Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddExercisePage;"]},"metadata":{},"sourceType":"module"}